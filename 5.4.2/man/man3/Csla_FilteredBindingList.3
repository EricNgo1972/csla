.TH "Csla.FilteredBindingList< T >" 3 "Wed Jul 21 2021" "Version 5.4.2" "CSLA.NET" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Csla.FilteredBindingList< T > \- Provides a filtered view into an existing IList(Of T)\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits IList< T >, IBindingList, IEnumerable< T >, and ICancelAddNew\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "IEnumerator< T > \fBGetEnumerator\fP ()"
.br
.RI "Gets an enumerator object\&. "
.ti -1c
.RI "void \fBAddIndex\fP (PropertyDescriptor property)"
.br
.RI "Implemented by IList source object\&. "
.ti -1c
.RI "object \fBAddNew\fP ()"
.br
.RI "Implemented by IList source object\&. "
.ti -1c
.RI "void \fBApplySort\fP (PropertyDescriptor property, ListSortDirection direction)"
.br
.RI "Sorts the list if the original list supports sorting\&. "
.ti -1c
.RI "void \fBApplySort\fP (string propertyName, ListSortDirection direction)"
.br
.RI "Sorts the list if the original list supports sorting\&. "
.ti -1c
.RI "int \fBFind\fP (string propertyName, object key)"
.br
.RI "Finds an item in the view "
.ti -1c
.RI "int \fBFind\fP (PropertyDescriptor property, object key)"
.br
.RI "Implemented by IList source object\&. "
.ti -1c
.RI "void \fBRemoveIndex\fP (PropertyDescriptor property)"
.br
.RI "Implemented by IList source object\&. "
.ti -1c
.RI "void \fBRemoveSort\fP ()"
.br
.RI "Removes any sort currently applied to the view\&. "
.ti -1c
.RI "void \fBCopyTo\fP (T[] array, int arrayIndex)"
.br
.RI "Copies the contents of the list to an array\&. "
.ti -1c
.RI "void \fBAdd\fP (T item)"
.br
.RI "Adds an item to the list\&. "
.ti -1c
.RI "void \fBClear\fP ()"
.br
.RI "Clears the list\&. "
.ti -1c
.RI "bool \fBContains\fP (T item)"
.br
.RI "Determines whether the specified item is contained in the list\&. "
.ti -1c
.RI "int \fBIndexOf\fP (T item)"
.br
.RI "Gets the 0-based index of an item in the list\&. "
.ti -1c
.RI "void \fBInsert\fP (int index, T item)"
.br
.RI "Inserts an item into the list\&. "
.ti -1c
.RI "bool \fBRemove\fP (T item)"
.br
.RI "Removes an item from the list\&. "
.ti -1c
.RI "void \fBRemoveAt\fP (int index)"
.br
.RI "Removes an item from the list\&. "
.ti -1c
.RI "\fBFilteredBindingList\fP (IList< T > list)"
.br
.RI "Creates a new view based on the provided IList object\&. "
.ti -1c
.RI "\fBFilteredBindingList\fP (IList< T > list, \fBFilterProvider\fP filterProvider)"
.br
.RI "Creates a new view based on the provided IList object\&. "
.ti -1c
.RI "void \fBApplyFilter\fP ()"
.br
.RI "Applies a filter to the view using the most recently used property name and filter provider\&. "
.ti -1c
.RI "void \fBApplyFilter\fP (string propertyName, object filter)"
.br
.RI "Applies a filter to the view\&. "
.ti -1c
.RI "void \fBApplyFilter\fP (PropertyDescriptor property, object filter)"
.br
.RI "Applies a filter to the view\&. "
.ti -1c
.RI "void \fBRemoveFilter\fP ()"
.br
.RI "Removes the filter from the list, so the view reflects the state of the original list\&. "
.ti -1c
.RI "T[] \fBToArray\fP ()"
.br
.RI "Get an array containing all items in the list\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBOnListChanged\fP (ListChangedEventArgs e)"
.br
.RI "Raises the ListChanged event\&. "
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "bool \fBAllowEdit\fP\fC [get]\fP"
.br
.RI "Implemented by IList source object\&. "
.ti -1c
.RI "bool \fBAllowNew\fP\fC [get]\fP"
.br
.RI "Implemented by IList source object\&. "
.ti -1c
.RI "bool \fBAllowRemove\fP\fC [get]\fP"
.br
.RI "Implemented by IList source object\&. "
.ti -1c
.RI "bool \fBIsSorted\fP\fC [get]\fP"
.br
.RI "Returns True if the view is currently sorted\&. "
.ti -1c
.RI "ListSortDirection \fBSortDirection\fP\fC [get]\fP"
.br
.RI "Returns the direction of the current sort\&. "
.ti -1c
.RI "PropertyDescriptor \fBSortProperty\fP\fC [get]\fP"
.br
.RI "Returns the PropertyDescriptor of the current sort\&. "
.ti -1c
.RI "bool \fBSupportsChangeNotification\fP\fC [get]\fP"
.br
.RI "Returns True since this object does raise the ListChanged event\&. "
.ti -1c
.RI "bool \fBSupportsSearching\fP\fC [get]\fP"
.br
.RI "Implemented by IList source object\&. "
.ti -1c
.RI "bool \fBSupportsSorting\fP\fC [get]\fP"
.br
.RI "Returns True\&. Sorting is supported\&. "
.ti -1c
.RI "int \fBCount\fP\fC [get]\fP"
.br
.RI "Gets the number of items in the list\&. "
.ti -1c
.RI "bool \fBIsReadOnly\fP\fC [get]\fP"
.br
.RI "Gets a value indicating whether the list is read-only\&. "
.ti -1c
.RI "T \fBthis[int index]\fP\fC [get, set]\fP"
.br
.RI "Gets or sets the item at the specified index\&. "
.ti -1c
.RI "IList< T > \fBSourceList\fP\fC [get]\fP"
.br
.RI "Gets the source list over which this \fBSortedBindingList\fP is a view\&. "
.ti -1c
.RI "FilterProvider \fBFilterProvider\fP\fC [get, set]\fP"
.br
.RI "Gets or sets the filter provider method\&. "
.ti -1c
.RI "PropertyDescriptor \fBFilterProperty\fP\fC [get]\fP"
.br
.RI "The property on which the items will be filtered\&. "
.ti -1c
.RI "bool \fBIsFiltered\fP\fC [get]\fP"
.br
.RI "Returns True if the view is currently filtered\&. "
.in -1c
.SS "Events"

.in +1c
.ti -1c
.RI "ListChangedEventHandler \fBListChanged\fP"
.br
.RI "Raised to indicate that the list's data has changed\&. "
.in -1c
.SH "Detailed Description"
.PP 
Provides a filtered view into an existing IList(Of T)\&. 


.PP
\fBTemplate Parameters\fP
.RS 4
\fIT\fP The type of the objects contained in the original list\&.
.RE
.PP

.PP
Definition at line 21 of file FilteredBindingList\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBCsla\&.FilteredBindingList\fP< T >\&.\fBFilteredBindingList\fP (IList< T > list)"

.PP
Creates a new view based on the provided IList object\&. 
.PP
\fBParameters\fP
.RS 4
\fIlist\fP The IList (collection) containing the data\&.
.RE
.PP

.PP
Definition at line 747 of file FilteredBindingList\&.cs\&.
.SS "\fBCsla\&.FilteredBindingList\fP< T >\&.\fBFilteredBindingList\fP (IList< T > list, \fBFilterProvider\fP filterProvider)"

.PP
Creates a new view based on the provided IList object\&. 
.PP
\fBParameters\fP
.RS 4
\fIlist\fP The IList (collection) containing the data\&.
.br
\fIfilterProvider\fP Delegate pointer to a method that implements the filter behavior\&. 
.RE
.PP

.PP
Definition at line 767 of file FilteredBindingList\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "void \fBCsla\&.FilteredBindingList\fP< T >\&.Add (T item)"

.PP
Adds an item to the list\&. 
.PP
\fBParameters\fP
.RS 4
\fIitem\fP Item to be added\&.
.RE
.PP

.PP
Definition at line 553 of file FilteredBindingList\&.cs\&.
.SS "void \fBCsla\&.FilteredBindingList\fP< T >\&.AddIndex (PropertyDescriptor property)"

.PP
Implemented by IList source object\&. 
.PP
\fBParameters\fP
.RS 4
\fIproperty\fP Property on which to build the index\&.
.RE
.PP

.PP
Definition at line 211 of file FilteredBindingList\&.cs\&.
.SS "object \fBCsla\&.FilteredBindingList\fP< T >\&.AddNew ()"

.PP
Implemented by IList source object\&. 
.PP
Definition at line 220 of file FilteredBindingList\&.cs\&.
.SS "void \fBCsla\&.FilteredBindingList\fP< T >\&.ApplyFilter ()"

.PP
Applies a filter to the view using the most recently used property name and filter provider\&. 
.PP
Definition at line 822 of file FilteredBindingList\&.cs\&.
.SS "void \fBCsla\&.FilteredBindingList\fP< T >\&.ApplyFilter (PropertyDescriptor property, object filter)"

.PP
Applies a filter to the view\&. 
.PP
\fBParameters\fP
.RS 4
\fIproperty\fP A PropertyDescriptor for the property on which to filter\&.
.br
\fIfilter\fP The filter criteria\&.
.RE
.PP

.PP
Definition at line 862 of file FilteredBindingList\&.cs\&.
.SS "void \fBCsla\&.FilteredBindingList\fP< T >\&.ApplyFilter (string propertyName, object filter)"

.PP
Applies a filter to the view\&. 
.PP
\fBParameters\fP
.RS 4
\fIpropertyName\fP The text name of the property on which to filter\&.
.br
\fIfilter\fP The filter criteria\&.
.RE
.PP

.PP
Definition at line 834 of file FilteredBindingList\&.cs\&.
.SS "void \fBCsla\&.FilteredBindingList\fP< T >\&.ApplySort (PropertyDescriptor property, ListSortDirection direction)"

.PP
Sorts the list if the original list supports sorting\&. 
.PP
\fBParameters\fP
.RS 4
\fIproperty\fP Property on which to sort\&.
.br
\fIdirection\fP Direction of the sort\&.
.RE
.PP

.PP
Definition at line 280 of file FilteredBindingList\&.cs\&.
.SS "void \fBCsla\&.FilteredBindingList\fP< T >\&.ApplySort (string propertyName, ListSortDirection direction)"

.PP
Sorts the list if the original list supports sorting\&. 
.PP
\fBParameters\fP
.RS 4
\fIpropertyName\fP PropertyName on which to sort\&.
.br
\fIdirection\fP Direction of the sort\&.
.RE
.PP

.PP
Definition at line 295 of file FilteredBindingList\&.cs\&.
.SS "void \fBCsla\&.FilteredBindingList\fP< T >\&.Clear ()"

.PP
Clears the list\&. 
.PP
Definition at line 571 of file FilteredBindingList\&.cs\&.
.SS "bool \fBCsla\&.FilteredBindingList\fP< T >\&.Contains (T item)"

.PP
Determines whether the specified item is contained in the list\&. 
.PP
\fBParameters\fP
.RS 4
\fIitem\fP Item to find\&.
.RE
.PP
\fBReturns\fP
.RS 4
true if the item is contained in the list\&.
.RE
.PP

.PP
Definition at line 587 of file FilteredBindingList\&.cs\&.
.SS "void \fBCsla\&.FilteredBindingList\fP< T >\&.CopyTo (T[] array, int arrayIndex)"

.PP
Copies the contents of the list to an array\&. 
.PP
\fBParameters\fP
.RS 4
\fIarray\fP Array to receive the data\&.
.br
\fIarrayIndex\fP Starting array index\&.
.RE
.PP

.PP
Definition at line 503 of file FilteredBindingList\&.cs\&.
.SS "int \fBCsla\&.FilteredBindingList\fP< T >\&.Find (PropertyDescriptor property, object key)"

.PP
Implemented by IList source object\&. 
.PP
\fBParameters\fP
.RS 4
\fIkey\fP Key value for which to search\&.
.br
\fIproperty\fP Property to search for the key value\&.
.RE
.PP

.PP
Definition at line 367 of file FilteredBindingList\&.cs\&.
.SS "int \fBCsla\&.FilteredBindingList\fP< T >\&.Find (string propertyName, object key)"

.PP
Finds an item in the view 
.PP
\fBParameters\fP
.RS 4
\fIpropertyName\fP Name of the property to search
.br
\fIkey\fP Value to find
.RE
.PP

.PP
Definition at line 340 of file FilteredBindingList\&.cs\&.
.SS "IEnumerator<T> \fBCsla\&.FilteredBindingList\fP< T >\&.GetEnumerator ()"

.PP
Gets an enumerator object\&. 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.PP
Definition at line 194 of file FilteredBindingList\&.cs\&.
.SS "int \fBCsla\&.FilteredBindingList\fP< T >\&.IndexOf (T item)"

.PP
Gets the 0-based index of an item in the list\&. 
.PP
\fBParameters\fP
.RS 4
\fIitem\fP The item to find\&.
.RE
.PP
\fBReturns\fP
.RS 4
0-based index of the item in the list\&.
.RE
.PP

.PP
Definition at line 604 of file FilteredBindingList\&.cs\&.
.SS "void \fBCsla\&.FilteredBindingList\fP< T >\&.Insert (int index, T item)"

.PP
Inserts an item into the list\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP Index at which to insert the item\&.
.br
\fIitem\fP Item to insert\&.
.RE
.PP

.PP
Definition at line 620 of file FilteredBindingList\&.cs\&.
.SS "void \fBCsla\&.FilteredBindingList\fP< T >\&.OnListChanged (ListChangedEventArgs e)\fC [protected]\fP"

.PP
Raises the ListChanged event\&. 
.PP
\fBParameters\fP
.RS 4
\fIe\fP Parameter for the event\&.
.RE
.PP

.PP
Definition at line 404 of file FilteredBindingList\&.cs\&.
.SS "bool \fBCsla\&.FilteredBindingList\fP< T >\&.Remove (T item)"

.PP
Removes an item from the list\&. 
.PP
\fBParameters\fP
.RS 4
\fIitem\fP Item to remove\&.
.RE
.PP
\fBReturns\fP
.RS 4
true if the remove succeeds\&.
.RE
.PP

.PP
Definition at line 662 of file FilteredBindingList\&.cs\&.
.SS "void \fBCsla\&.FilteredBindingList\fP< T >\&.RemoveAt (int index)"

.PP
Removes an item from the list\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP Index of item to be removed\&.
.RE
.PP

.PP
Definition at line 677 of file FilteredBindingList\&.cs\&.
.SS "void \fBCsla\&.FilteredBindingList\fP< T >\&.RemoveFilter ()"

.PP
Removes the filter from the list, so the view reflects the state of the original list\&. 
.PP
Definition at line 875 of file FilteredBindingList\&.cs\&.
.SS "void \fBCsla\&.FilteredBindingList\fP< T >\&.RemoveIndex (PropertyDescriptor property)"

.PP
Implemented by IList source object\&. 
.PP
\fBParameters\fP
.RS 4
\fIproperty\fP Property for which the index should be removed\&.
.RE
.PP

.PP
Definition at line 415 of file FilteredBindingList\&.cs\&.
.SS "void \fBCsla\&.FilteredBindingList\fP< T >\&.RemoveSort ()"

.PP
Removes any sort currently applied to the view\&. 
.PP
Definition at line 424 of file FilteredBindingList\&.cs\&.
.SS "T [] \fBCsla\&.FilteredBindingList\fP< T >\&.ToArray ()"

.PP
Get an array containing all items in the list\&. 
.PP
Definition at line 1032 of file FilteredBindingList\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "bool \fBCsla\&.FilteredBindingList\fP< T >\&.AllowEdit\fC [get]\fP"

.PP
Implemented by IList source object\&. 
.PP
Definition at line 235 of file FilteredBindingList\&.cs\&.
.SS "bool \fBCsla\&.FilteredBindingList\fP< T >\&.AllowNew\fC [get]\fP"

.PP
Implemented by IList source object\&. 
.PP
Definition at line 249 of file FilteredBindingList\&.cs\&.
.SS "bool \fBCsla\&.FilteredBindingList\fP< T >\&.AllowRemove\fC [get]\fP"

.PP
Implemented by IList source object\&. 
.PP
Definition at line 263 of file FilteredBindingList\&.cs\&.
.SS "int \fBCsla\&.FilteredBindingList\fP< T >\&.Count\fC [get]\fP"

.PP
Gets the number of items in the list\&. 
.PP
Definition at line 523 of file FilteredBindingList\&.cs\&.
.SS "PropertyDescriptor \fBCsla\&.FilteredBindingList\fP< T >\&.FilterProperty\fC [get]\fP"

.PP
The property on which the items will be filtered\&. A descriptor for the property on which the items in the collection will be filtered\&.
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line 804 of file FilteredBindingList\&.cs\&.
.SS "FilterProvider \fBCsla\&.FilteredBindingList\fP< T >\&.FilterProvider\fC [get]\fP, \fC [set]\fP"

.PP
Gets or sets the filter provider method\&. Delegate pointer to a method that implements the filter behavior\&. 
.PP
\fBReturns\fP
.RS 4
Delegate pointer to a method that implements the filter behavior\&. 
.RE
.PP
.PP
If this value is set to Nothing (null in C#) then the default filter provider, DefaultFilter will be used\&. 
.PP
Definition at line 785 of file FilteredBindingList\&.cs\&.
.SS "bool \fBCsla\&.FilteredBindingList\fP< T >\&.IsFiltered\fC [get]\fP"

.PP
Returns True if the view is currently filtered\&. 
.PP
Definition at line 812 of file FilteredBindingList\&.cs\&.
.SS "bool \fBCsla\&.FilteredBindingList\fP< T >\&.IsReadOnly\fC [get]\fP"

.PP
Gets a value indicating whether the list is read-only\&. 
.PP
Definition at line 639 of file FilteredBindingList\&.cs\&.
.SS "bool \fBCsla\&.FilteredBindingList\fP< T >\&.IsSorted\fC [get]\fP"

.PP
Returns True if the view is currently sorted\&. 
.PP
Definition at line 378 of file FilteredBindingList\&.cs\&.
.SS "ListSortDirection \fBCsla\&.FilteredBindingList\fP< T >\&.SortDirection\fC [get]\fP"

.PP
Returns the direction of the current sort\&. 
.PP
Definition at line 435 of file FilteredBindingList\&.cs\&.
.SS "PropertyDescriptor \fBCsla\&.FilteredBindingList\fP< T >\&.SortProperty\fC [get]\fP"

.PP
Returns the PropertyDescriptor of the current sort\&. 
.PP
Definition at line 449 of file FilteredBindingList\&.cs\&.
.SS "IList<T> \fBCsla\&.FilteredBindingList\fP< T >\&.SourceList\fC [get]\fP"

.PP
Gets the source list over which this \fBSortedBindingList\fP is a view\&. 
.PP
Definition at line 723 of file FilteredBindingList\&.cs\&.
.SS "bool \fBCsla\&.FilteredBindingList\fP< T >\&.SupportsChangeNotification\fC [get]\fP"

.PP
Returns True since this object does raise the ListChanged event\&. 
.PP
Definition at line 464 of file FilteredBindingList\&.cs\&.
.SS "bool \fBCsla\&.FilteredBindingList\fP< T >\&.SupportsSearching\fC [get]\fP"

.PP
Implemented by IList source object\&. 
.PP
Definition at line 472 of file FilteredBindingList\&.cs\&.
.SS "bool \fBCsla\&.FilteredBindingList\fP< T >\&.SupportsSorting\fC [get]\fP"

.PP
Returns True\&. Sorting is supported\&. 
.PP
Definition at line 486 of file FilteredBindingList\&.cs\&.
.SS "T \fBCsla\&.FilteredBindingList\fP< T >\&.this[int index]\fC [get]\fP, \fC [set]\fP"

.PP
Gets or sets the item at the specified index\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP Index of the item\&.
.RE
.PP
\fBReturns\fP
.RS 4
Item at the specified index\&.
.RE
.PP

.PP
Definition at line 693 of file FilteredBindingList\&.cs\&.
.SH "Event Documentation"
.PP 
.SS "ListChangedEventHandler \fBCsla\&.FilteredBindingList\fP< T >\&.ListChanged"

.PP
Raised to indicate that the list's data has changed\&. This event is raised if the underling IList object's data changes (assuming the underling IList also implements the IBindingList interface)\&. It is also raised if the filter is changed to indicate that the view's data has changed\&. 
.PP
Definition at line 398 of file FilteredBindingList\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for CSLA\&.NET from the source code\&.
