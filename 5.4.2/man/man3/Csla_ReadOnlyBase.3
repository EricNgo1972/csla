.TH "Csla.ReadOnlyBase< T >" 3 "Wed Jul 21 2021" "Version 5.4.2" "CSLA.NET" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Csla.ReadOnlyBase< T > \- This is a base class from which readonly business classes can be derived\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBCsla\&.Core\&.BindableBase\fP, ICloneable, \fBCsla\&.Core\&.IReadOnlyObject\fP, \fBCsla\&.Serialization\&.Mobile\&.ISerializationNotification\fP, \fBCsla\&.Security\&.IAuthorizeReadWrite\fP, Csla\&.Server\&.IDataPortalTarget, Csla\&.Core\&.IManageProperties, \fBCsla\&.Core\&.INotifyBusy\fP, \fBCsla\&.Rules\&.IHostRules\fP, and \fBCsla\&.IReadOnlyBase\fP\&.
.PP
Inherited by \fBCsla\&.Validation\&.ReadOnlyBase< T >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "override string \fBToString\fP ()"
.br
.RI "Returns a text representation of this object by returning the \fBGetIdValue\fP value in text form\&. "
.ti -1c
.RI "virtual bool \fBCanReadProperty\fP (\fBCsla\&.Core\&.IPropertyInfo\fP property)"
.br
.RI "Returns true if the user is allowed to read the calling property\&. "
.ti -1c
.RI "bool \fBCanReadProperty\fP (\fBCsla\&.Core\&.IPropertyInfo\fP property, bool throwOnFalse)"
.br
.RI "Returns true if the user is allowed to read the calling property\&. "
.ti -1c
.RI "bool \fBCanReadProperty\fP (string propertyName)"
.br
.RI "Returns true if the user is allowed to read the specified property\&. "
.ti -1c
.RI "virtual bool \fBCanExecuteMethod\fP (\fBCsla\&.Core\&.IMemberInfo\fP method)"
.br
.RI "Returns true if the user is allowed to execute the specified method\&. "
.ti -1c
.RI "bool \fBCanExecuteMethod\fP (\fBCsla\&.Core\&.IMemberInfo\fP method, bool throwOnFalse)"
.br
.RI "Returns true if the user is allowed to execute the specified method\&. "
.ti -1c
.RI "virtual bool \fBCanExecuteMethod\fP (string methodName)"
.br
.RI "Returns true if the user is allowed to execute the specified method\&. "
.ti -1c
.RI "virtual object \fBGetClone\fP ()"
.br
.RI "Creates a clone of the object\&. "
.ti -1c
.RI "T \fBClone\fP ()"
.br
.RI "Creates a clone of the object\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual object \fBGetIdValue\fP ()"
.br
.RI "Override this method to return a unique identifying value for this object\&. "
.ti -1c
.RI "\fBReadOnlyBase\fP ()"
.br
.RI "Creates an instance of the object\&. "
.ti -1c
.RI "virtual void \fBInitialize\fP ()"
.br
.RI "Override this method to set up event handlers so user code in a partial class can respond to events raised by generated code\&. "
.ti -1c
.RI "virtual void \fBAddBusinessRules\fP ()"
.br
.RI "Override this method to add per-type authorization rules for your type's properties\&. "
.ti -1c
.RI "virtual void \fBDataPortal_OnDataPortalInvoke\fP (\fBDataPortalEventArgs\fP e)"
.br
.RI "Called by the server-side \fBDataPortal\fP prior to calling the requested DataPortal_xyz method\&. "
.ti -1c
.RI "virtual void \fBDataPortal_OnDataPortalInvokeComplete\fP (\fBDataPortalEventArgs\fP e)"
.br
.RI "Called by the server-side \fBDataPortal\fP after calling the requested DataPortal_xyz method\&. "
.ti -1c
.RI "virtual void \fBDataPortal_OnDataPortalException\fP (\fBDataPortalEventArgs\fP e, Exception ex)"
.br
.RI "Called by the server-side \fBDataPortal\fP if an exception occurs during data access\&. "
.ti -1c
.RI "virtual void \fBChild_OnDataPortalInvoke\fP (\fBDataPortalEventArgs\fP e)"
.br
.RI "Called by the server-side \fBDataPortal\fP prior to calling the requested DataPortal_XYZ method\&. "
.ti -1c
.RI "virtual void \fBChild_OnDataPortalInvokeComplete\fP (\fBDataPortalEventArgs\fP e)"
.br
.RI "Called by the server-side \fBDataPortal\fP after calling the requested DataPortal_XYZ method\&. "
.ti -1c
.RI "virtual void \fBChild_OnDataPortalException\fP (\fBDataPortalEventArgs\fP e, Exception ex)"
.br
.RI "Called by the server-side \fBDataPortal\fP if an exception occurs during data access\&. "
.ti -1c
.RI "virtual void \fBOnDeserialized\fP (System\&.Runtime\&.Serialization\&.StreamingContext context)"
.br
.RI "This method is called on a newly deserialized object after deserialization is complete\&. "
.ti -1c
.RI "P \fBGetProperty< P >\fP (string propertyName, P field, P defaultValue)"
.br
.RI "Gets a property's value, first checking authorization\&. "
.ti -1c
.RI "P \fBGetProperty< P >\fP (string propertyName, P field, P defaultValue, \fBSecurity\&.NoAccessBehavior\fP noAccess)"
.br
.RI "Gets a property's value, first checking authorization\&. "
.ti -1c
.RI "P \fBGetProperty< P >\fP (\fBPropertyInfo\fP< P > propertyInfo, P field)"
.br
.RI "Gets a property's value, first checking authorization\&. "
.ti -1c
.RI "P \fBGetProperty< P >\fP (\fBPropertyInfo\fP< P > propertyInfo, P field, P defaultValue, \fBSecurity\&.NoAccessBehavior\fP noAccess)"
.br
.RI "Gets a property's value, first checking authorization\&. "
.ti -1c
.RI "P \fBLazyGetProperty< P >\fP (\fBPropertyInfo\fP< P > property, Func< P > valueGenerator)"
.br
.RI "Lazily initializes a property and returns the resulting value\&. "
.ti -1c
.RI "P \fBLazyGetPropertyAsync< P >\fP (\fBPropertyInfo\fP< P > property, Task< P > factory)"
.br
.RI "Lazily initializes a property and returns the resulting value\&. "
.ti -1c
.RI "P \fBGetPropertyConvert< F, P >\fP (\fBPropertyInfo\fP< F > propertyInfo, F field)"
.br
.RI "Gets a property's value as a specified type, first checking authorization\&. "
.ti -1c
.RI "P \fBGetPropertyConvert< F, P >\fP (\fBPropertyInfo\fP< F > propertyInfo, F field, \fBSecurity\&.NoAccessBehavior\fP noAccess)"
.br
.RI "Gets a property's value as a specified type, first checking authorization\&. "
.ti -1c
.RI "P \fBGetProperty< P >\fP (\fBPropertyInfo\fP< P > propertyInfo)"
.br
.RI "Gets a property's managed field value, first checking authorization\&. "
.ti -1c
.RI "P \fBGetPropertyConvert< F, P >\fP (\fBPropertyInfo\fP< F > propertyInfo)"
.br
.RI "Gets a property's value from the list of managed field values, first checking authorization, and converting the value to an appropriate type\&. "
.ti -1c
.RI "P \fBGetPropertyConvert< F, P >\fP (\fBPropertyInfo\fP< F > propertyInfo, \fBSecurity\&.NoAccessBehavior\fP noAccess)"
.br
.RI "Gets a property's value from the list of managed field values, first checking authorization, and converting the value to an appropriate type\&. "
.ti -1c
.RI "P \fBGetProperty< P >\fP (\fBPropertyInfo\fP< P > propertyInfo, \fBSecurity\&.NoAccessBehavior\fP noAccess)"
.br
.RI "Gets a property's value as a specified type, first checking authorization\&. "
.ti -1c
.RI "object \fBGetProperty\fP (\fBIPropertyInfo\fP propertyInfo)"
.br
.RI "Gets a property's value as a specified type\&. "
.ti -1c
.RI "P \fBReadPropertyConvert< F, P >\fP (\fBPropertyInfo\fP< F > propertyInfo)"
.br
.RI "Gets a property's value from the list of managed field values, converting the value to an appropriate type\&. "
.ti -1c
.RI "P \fBReadProperty< P >\fP (\fBPropertyInfo\fP< P > propertyInfo)"
.br
.RI "Gets a property's value as a specified type\&. "
.ti -1c
.RI "virtual object \fBReadProperty\fP (\fBIPropertyInfo\fP propertyInfo)"
.br
.RI "Gets a property's value as a specified type\&. "
.ti -1c
.RI "P \fBLazyReadProperty< P >\fP (\fBPropertyInfo\fP< P > property, Func< P > valueGenerator)"
.br
.RI "Gets a property's value as a specified type\&. "
.ti -1c
.RI "P \fBLazyReadPropertyAsync< P >\fP (\fBPropertyInfo\fP< P > property, Task< P > factory)"
.br
.RI "Gets a property's value as a specified type\&. "
.ti -1c
.RI "void \fBLoadPropertyConvert< P, F >\fP (\fBPropertyInfo\fP< P > propertyInfo, F newValue)"
.br
.RI "Loads a property's managed field with the supplied value calling PropertyHasChanged if the value does change\&. "
.ti -1c
.RI "void \fBLoadProperty< P >\fP (\fBPropertyInfo\fP< P > propertyInfo, P newValue)"
.br
.RI "Loads a property's managed field with the supplied value calling PropertyHasChanged if the value does change\&. "
.ti -1c
.RI "virtual void \fBLoadProperty\fP (\fBIPropertyInfo\fP propertyInfo, object newValue)"
.br
.RI "Loads a property's managed field with the supplied value calling PropertyHasChanged if the value does change\&. "
.ti -1c
.RI "void \fBLoadPropertyAsync< R >\fP (\fBPropertyInfo\fP< R > property, Task< R > factory)"
.br
.RI "Load a property from an async method\&. "
.ti -1c
.RI "void \fBMarkBusy\fP ()"
.br
.RI "Marks the object as being busy (it is running an async operation)\&. "
.ti -1c
.RI "void \fBMarkIdle\fP ()"
.br
.RI "Marks the object as being not busy (it is not running an async operation)\&. "
.ti -1c
.RI "void \fBOnBusyChanged\fP (string propertyName, bool busy)"
.br
.RI "Raises the BusyChanged event\&. "
.ti -1c
.RI "virtual void \fBOnBusyChanged\fP (\fBBusyChangedEventArgs\fP args)"
.br
.RI "Raises the BusyChanged event\&. "
.ti -1c
.RI "override void \fBOnGetChildren\fP (\fBCsla\&.Serialization\&.Mobile\&.SerializationInfo\fP info, \fBCsla\&.Serialization\&.Mobile\&.MobileFormatter\fP formatter)"
.br
.RI "Override this method to insert your child object references into the MobileFormatter serialzation stream\&. "
.ti -1c
.RI "override void \fBOnSetChildren\fP (\fBCsla\&.Serialization\&.Mobile\&.SerializationInfo\fP info, \fBCsla\&.Serialization\&.Mobile\&.MobileFormatter\fP formatter)"
.br
.RI "Override this method to retrieve your child object references from the MobileFormatter serialzation stream\&. "
.ti -1c
.RI "virtual void \fBOnUnhandledAsyncException\fP (\fBErrorEventArgs\fP error)"
.br
.RI "Raises the UnhandledAsyncException event\&. "
.ti -1c
.RI "void \fBOnUnhandledAsyncException\fP (object originalSender, Exception error)"
.br
.RI "Raises the UnhandledAsyncException event\&. "
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static \fBPropertyInfo\fP< P > \fBRegisterProperty< P >\fP (Type objectType, \fBPropertyInfo\fP< P > info)"
.br
.RI "Indicates that the specified property belongs to the type\&. "
.ti -1c
.RI "static \fBPropertyInfo\fP< P > \fBRegisterProperty< P >\fP (\fBPropertyInfo\fP< P > info)"
.br
.RI "Indicates that the specified property belongs to the business object type\&. "
.ti -1c
.RI "static \fBPropertyInfo\fP< P > \fBRegisterProperty< P >\fP (string propertyName)"
.br
.RI "Indicates that the specified property belongs to the business object type\&. "
.ti -1c
.RI "static \fBPropertyInfo\fP< P > \fBRegisterProperty< P >\fP (Expression< Func< T, object >> propertyLambdaExpression)"
.br
.RI "Indicates that the specified property belongs to the business object type\&. "
.ti -1c
.RI "static \fBPropertyInfo\fP< P > \fBRegisterProperty< P >\fP (Expression< Func< T, object >> propertyLambdaExpression, P defaultValue)"
.br
.RI "Indicates that the specified property belongs to the business object type\&. "
.ti -1c
.RI "static \fBPropertyInfo\fP< P > \fBRegisterProperty< P >\fP (string propertyName, string friendlyName)"
.br
.RI "Indicates that the specified property belongs to the business object type\&. "
.ti -1c
.RI "static \fBPropertyInfo\fP< P > \fBRegisterProperty< P >\fP (Expression< Func< T, object >> propertyLambdaExpression, string friendlyName)"
.br
.RI "Indicates that the specified property belongs to the business object type\&. "
.ti -1c
.RI "static \fBPropertyInfo\fP< P > \fBRegisterProperty< P >\fP (string propertyName, string friendlyName, P defaultValue)"
.br
.RI "Indicates that the specified property belongs to the business object type\&. "
.ti -1c
.RI "static \fBPropertyInfo\fP< P > \fBRegisterProperty< P >\fP (Expression< Func< T, object >> propertyLambdaExpression, string friendlyName, P defaultValue)"
.br
.RI "Indicates that the specified property belongs to the business object type\&. "
.ti -1c
.RI "static \fBPropertyInfo\fP< P > \fBRegisterProperty< P >\fP (string propertyName, \fBRelationshipTypes\fP relationship)"
.br
.RI "Indicates that the specified property belongs to the business object type\&. "
.ti -1c
.RI "static \fBPropertyInfo\fP< P > \fBRegisterProperty< P >\fP (Expression< Func< T, object >> propertyLambdaExpression, \fBRelationshipTypes\fP relationship)"
.br
.RI "Indicates that the specified property belongs to the business object type\&. "
.ti -1c
.RI "static \fBPropertyInfo\fP< P > \fBRegisterProperty< P >\fP (Expression< Func< T, object >> propertyLambdaExpression, string friendlyName, \fBRelationshipTypes\fP relationship)"
.br
.RI "Indicates that the specified property belongs to the business object type\&. "
.ti -1c
.RI "static \fBPropertyInfo\fP< P > \fBRegisterProperty< P >\fP (string propertyName, string friendlyName, P defaultValue, \fBRelationshipTypes\fP relationship)"
.br
.RI "Indicates that the specified property belongs to the business object type\&. "
.ti -1c
.RI "static \fBPropertyInfo\fP< P > \fBRegisterProperty< P >\fP (Expression< Func< T, object >> propertyLambdaExpression, string friendlyName, P defaultValue, \fBRelationshipTypes\fP relationship)"
.br
.RI "Indicates that the specified property belongs to the business object type\&. "
.ti -1c
.RI "static \fBCsla\&.Core\&.IMemberInfo\fP \fBRegisterMethod\fP (Type objectType, \fBIMemberInfo\fP info)"
.br
.RI "Indicates that the specified method belongs to the type\&. "
.ti -1c
.RI "static \fBMethodInfo\fP \fBRegisterMethod\fP (Type objectType, string methodName)"
.br
.RI "Indicates that the specified method belongs to the type\&. "
.ti -1c
.RI "static \fBMethodInfo\fP \fBRegisterMethod\fP (string methodName)"
.br
.RI "Registers a method for use in Authorization\&. "
.ti -1c
.RI "static \fBMethodInfo\fP \fBRegisterMethod\fP (Expression< Action< T >> methodLambdaExpression)"
.br
.RI "Registers the method\&. "
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBBusinessRules\fP \fBBusinessRules\fP\fC [get]\fP"
.br
.RI "Provides access to the broken rules functionality\&. "
.ti -1c
.RI "\fBFieldDataManager\fP \fBFieldManager\fP\fC [get]\fP"
.br
.RI "Gets the PropertyManager object for this business object\&. "
.ti -1c
.RI "virtual bool \fBIsBusy\fP\fC [get]\fP"
.br
.RI "Gets a value indicating whether this object or any of its child objects are running an async operation\&. "
.ti -1c
.RI "virtual bool \fBIsSelfBusy\fP\fC [get]\fP"
.br
.RI "Gets a value indicating whether this object is running an async operation\&. "
.ti -1c
.RI "BusyChangedEventHandler \fBBusyChanged\fP"
.br
.RI "Event raised when the IsBusy property value has changed\&. "
.ti -1c
.RI "EventHandler< \fBErrorEventArgs\fP > \fBUnhandledAsyncException\fP"
.br
.RI "Event raised when an exception occurs on a background thread during an asynchronous operation\&. "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
This is a base class from which readonly business classes can be derived\&. 

This base class only supports data retrieve, not updating or deleting\&. Any business classes derived from this base class should only implement readonly properties\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIT\fP Type of the business object\&.
.RE
.PP

.PP
\fBType Constraints\fP
.TP
\fIT\fP : \fI\fBReadOnlyBase\fP<T>\fP
.PP
Definition at line 41 of file ReadOnlyBase\&.cs\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBCsla\&.ReadOnlyBase\fP< T >\&.\fBReadOnlyBase\fP ()\fC [protected]\fP"

.PP
Creates an instance of the object\&. 
.PP
Definition at line 87 of file ReadOnlyBase\&.cs\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual void \fBCsla\&.ReadOnlyBase\fP< T >\&.AddBusinessRules ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Override this method to add per-type authorization rules for your type's properties\&. AddSharedAuthorizationRules is automatically called by CSLA \&.NET when your object should associate per-type authorization roles with its properties\&. 
.PP
Reimplemented in \fBCsla\&.Test\&.Authorization\&.ReadOnlyPerson\fP\&.
.PP
Definition at line 189 of file ReadOnlyBase\&.cs\&.
.SS "virtual bool \fBCsla\&.ReadOnlyBase\fP< T >\&.CanExecuteMethod (\fBCsla\&.Core\&.IMemberInfo\fP method)\fC [virtual]\fP"

.PP
Returns true if the user is allowed to execute the specified method\&. 
.PP
\fBParameters\fP
.RS 4
\fImethod\fP Method to execute\&.
.RE
.PP
\fBReturns\fP
.RS 4
true if execute is allowed\&.
.RE
.PP

.PP
Definition at line 299 of file ReadOnlyBase\&.cs\&.
.SS "bool \fBCsla\&.ReadOnlyBase\fP< T >\&.CanExecuteMethod (\fBCsla\&.Core\&.IMemberInfo\fP method, bool throwOnFalse)"

.PP
Returns true if the user is allowed to execute the specified method\&. 
.PP
\fBReturns\fP
.RS 4
true if execute is allowed\&.
.RE
.PP
\fBParameters\fP
.RS 4
\fImethod\fP Method to execute\&.
.br
\fIthrowOnFalse\fP Indicates whether a negative result should cause an exception\&.
.RE
.PP

.PP
Definition at line 322 of file ReadOnlyBase\&.cs\&.
.SS "virtual bool \fBCsla\&.ReadOnlyBase\fP< T >\&.CanExecuteMethod (string methodName)\fC [virtual]\fP"

.PP
Returns true if the user is allowed to execute the specified method\&. 
.PP
\fBParameters\fP
.RS 4
\fImethodName\fP Name of the method to execute\&.
.RE
.PP
\fBReturns\fP
.RS 4
true if execute is allowed\&.
.RE
.PP

.PP
Implements \fBCsla\&.Security\&.IAuthorizeReadWrite\fP\&.
.PP
Definition at line 344 of file ReadOnlyBase\&.cs\&.
.SS "virtual bool \fBCsla\&.ReadOnlyBase\fP< T >\&.CanReadProperty (\fBCsla\&.Core\&.IPropertyInfo\fP property)\fC [virtual]\fP"

.PP
Returns true if the user is allowed to read the calling property\&. 
.PP
\fBParameters\fP
.RS 4
\fIproperty\fP Property to check\&.
.RE
.PP

.PP
Definition at line 198 of file ReadOnlyBase\&.cs\&.
.SS "bool \fBCsla\&.ReadOnlyBase\fP< T >\&.CanReadProperty (\fBCsla\&.Core\&.IPropertyInfo\fP property, bool throwOnFalse)"

.PP
Returns true if the user is allowed to read the calling property\&. 
.PP
\fBReturns\fP
.RS 4
true if read is allowed\&.
.RE
.PP
\fBParameters\fP
.RS 4
\fIproperty\fP Property to read\&.
.br
\fIthrowOnFalse\fP Indicates whether a negative result should cause an exception\&.
.RE
.PP

.PP
Definition at line 222 of file ReadOnlyBase\&.cs\&.
.SS "bool \fBCsla\&.ReadOnlyBase\fP< T >\&.CanReadProperty (string propertyName)"

.PP
Returns true if the user is allowed to read the specified property\&. 
.PP
\fBParameters\fP
.RS 4
\fIpropertyName\fP Name of the property to read\&.
.RE
.PP

.PP
Implements \fBCsla\&.Core\&.IReadOnlyObject\fP\&.
.PP
Definition at line 241 of file ReadOnlyBase\&.cs\&.
.SS "virtual void \fBCsla\&.ReadOnlyBase\fP< T >\&.Child_OnDataPortalException (\fBDataPortalEventArgs\fP e, Exception ex)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Called by the server-side \fBDataPortal\fP if an exception occurs during data access\&. 
.PP
\fBParameters\fP
.RS 4
\fIe\fP The DataPortalContext object passed to the \fBDataPortal\fP\&.
.br
\fIex\fP The Exception thrown during data access\&.
.RE
.PP

.PP
Definition at line 485 of file ReadOnlyBase\&.cs\&.
.SS "virtual void \fBCsla\&.ReadOnlyBase\fP< T >\&.Child_OnDataPortalInvoke (\fBDataPortalEventArgs\fP e)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Called by the server-side \fBDataPortal\fP prior to calling the requested DataPortal_XYZ method\&. 
.PP
\fBParameters\fP
.RS 4
\fIe\fP The DataPortalContext object passed to the \fBDataPortal\fP\&.
.RE
.PP

.PP
Definition at line 462 of file ReadOnlyBase\&.cs\&.
.SS "virtual void \fBCsla\&.ReadOnlyBase\fP< T >\&.Child_OnDataPortalInvokeComplete (\fBDataPortalEventArgs\fP e)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Called by the server-side \fBDataPortal\fP after calling the requested DataPortal_XYZ method\&. 
.PP
\fBParameters\fP
.RS 4
\fIe\fP The DataPortalContext object passed to the \fBDataPortal\fP\&.
.RE
.PP

.PP
Definition at line 473 of file ReadOnlyBase\&.cs\&.
.SS "T \fBCsla\&.ReadOnlyBase\fP< T >\&.Clone ()"

.PP
Creates a clone of the object\&. 
.PP
\fBReturns\fP
.RS 4
A new object containing the exact data of the original object\&. 
.RE
.PP

.PP
Definition at line 386 of file ReadOnlyBase\&.cs\&.
.SS "virtual void \fBCsla\&.ReadOnlyBase\fP< T >\&.DataPortal_OnDataPortalException (\fBDataPortalEventArgs\fP e, Exception ex)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Called by the server-side \fBDataPortal\fP if an exception occurs during data access\&. 
.PP
\fBParameters\fP
.RS 4
\fIe\fP The DataPortalContext object passed to the \fBDataPortal\fP\&.
.br
\fIex\fP The Exception thrown during data access\&.
.RE
.PP

.PP
Definition at line 450 of file ReadOnlyBase\&.cs\&.
.SS "virtual void \fBCsla\&.ReadOnlyBase\fP< T >\&.DataPortal_OnDataPortalInvoke (\fBDataPortalEventArgs\fP e)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Called by the server-side \fBDataPortal\fP prior to calling the requested DataPortal_xyz method\&. 
.PP
\fBParameters\fP
.RS 4
\fIe\fP The DataPortalContext object passed to the \fBDataPortal\fP\&.
.RE
.PP

.PP
Definition at line 425 of file ReadOnlyBase\&.cs\&.
.SS "virtual void \fBCsla\&.ReadOnlyBase\fP< T >\&.DataPortal_OnDataPortalInvokeComplete (\fBDataPortalEventArgs\fP e)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Called by the server-side \fBDataPortal\fP after calling the requested DataPortal_xyz method\&. 
.PP
\fBParameters\fP
.RS 4
\fIe\fP The DataPortalContext object passed to the \fBDataPortal\fP\&.
.RE
.PP

.PP
Definition at line 437 of file ReadOnlyBase\&.cs\&.
.SS "virtual object \fBCsla\&.ReadOnlyBase\fP< T >\&.GetClone ()\fC [virtual]\fP"

.PP
Creates a clone of the object\&. 
.PP
\fBReturns\fP
.RS 4
A new object containing the exact data of the original object\&.
.RE
.PP

.PP
Definition at line 375 of file ReadOnlyBase\&.cs\&.
.SS "virtual object \fBCsla\&.ReadOnlyBase\fP< T >\&.GetIdValue ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Override this method to return a unique identifying value for this object\&. 
.PP
Definition at line 59 of file ReadOnlyBase\&.cs\&.
.SS "object \fBCsla\&.ReadOnlyBase\fP< T >\&.GetProperty (\fBIPropertyInfo\fP propertyInfo)\fC [protected]\fP"

.PP
Gets a property's value as a specified type\&. 
.PP
\fBParameters\fP
.RS 4
\fIpropertyInfo\fP \fBPropertyInfo\fP object containing property metadata\&.
.RE
.PP
.PP
If the user is not authorized to read the property value, the defaultValue value is returned as a result\&. 
.PP
Definition at line 1111 of file ReadOnlyBase\&.cs\&.
.SS "P \fBCsla\&.ReadOnlyBase\fP< T >\&.\fBGetProperty\fP< P > (\fBPropertyInfo\fP< P > propertyInfo)\fC [protected]\fP"

.PP
Gets a property's managed field value, first checking authorization\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of the property\&. 
.RE
.PP
\fBParameters\fP
.RS 4
\fIpropertyInfo\fP \fBPropertyInfo\fP object containing property metadata\&.
.RE
.PP
.PP
If the user is not authorized to read the property value, the defaultValue value is returned as a result\&. 
.PP
Definition at line 1020 of file ReadOnlyBase\&.cs\&.
.SS "P \fBCsla\&.ReadOnlyBase\fP< T >\&.\fBGetProperty\fP< P > (\fBPropertyInfo\fP< P > propertyInfo, P field)\fC [protected]\fP"

.PP
Gets a property's value, first checking authorization\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of the property\&. 
.RE
.PP
\fBParameters\fP
.RS 4
\fIfield\fP The backing field for the property\&.
.br
\fIpropertyInfo\fP \fBPropertyInfo\fP object containing property metadata\&.
.RE
.PP
.PP
If the user is not authorized to read the property value, the defaultValue value is returned as a result\&. 
.PP
Definition at line 874 of file ReadOnlyBase\&.cs\&.
.SS "P \fBCsla\&.ReadOnlyBase\fP< T >\&.\fBGetProperty\fP< P > (\fBPropertyInfo\fP< P > propertyInfo, P field, P defaultValue, \fBSecurity\&.NoAccessBehavior\fP noAccess)\fC [protected]\fP"

.PP
Gets a property's value, first checking authorization\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of the property\&. 
.RE
.PP
\fBParameters\fP
.RS 4
\fIfield\fP The backing field for the property\&.
.br
\fIpropertyInfo\fP \fBPropertyInfo\fP object containing property metadata\&.
.br
\fIdefaultValue\fP Value to be returned if the user is not authorized to read the property\&.
.br
\fInoAccess\fP True if an exception should be thrown when the user is not authorized to read this property\&.
.RE
.PP

.PP
Definition at line 895 of file ReadOnlyBase\&.cs\&.
.SS "P \fBCsla\&.ReadOnlyBase\fP< T >\&.\fBGetProperty\fP< P > (\fBPropertyInfo\fP< P > propertyInfo, \fBSecurity\&.NoAccessBehavior\fP noAccess)\fC [protected]\fP"

.PP
Gets a property's value as a specified type, first checking authorization\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of the property\&. 
.RE
.PP
\fBParameters\fP
.RS 4
\fIpropertyInfo\fP \fBPropertyInfo\fP object containing property metadata\&.
.br
\fInoAccess\fP True if an exception should be thrown when the user is not authorized to read this property\&.
.RE
.PP
.PP
If the user is not authorized to read the property value, the defaultValue value is returned as a result\&. 
.PP
Definition at line 1091 of file ReadOnlyBase\&.cs\&.
.SS "P \fBCsla\&.ReadOnlyBase\fP< T >\&.\fBGetProperty\fP< P > (string propertyName, P field, P defaultValue)\fC [protected]\fP"

.PP
Gets a property's value, first checking authorization\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of the property\&. 
.RE
.PP
\fBParameters\fP
.RS 4
\fIfield\fP The backing field for the property\&.
.br
\fIpropertyName\fP The name of the property\&.
.br
\fIdefaultValue\fP Value to be returned if the user is not authorized to read the property\&.
.RE
.PP
.PP
If the user is not authorized to read the property value, the defaultValue value is returned as a result\&. 
.PP
Definition at line 821 of file ReadOnlyBase\&.cs\&.
.SS "P \fBCsla\&.ReadOnlyBase\fP< T >\&.\fBGetProperty\fP< P > (string propertyName, P field, P defaultValue, \fBSecurity\&.NoAccessBehavior\fP noAccess)\fC [protected]\fP"

.PP
Gets a property's value, first checking authorization\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of the property\&. 
.RE
.PP
\fBParameters\fP
.RS 4
\fIfield\fP The backing field for the property\&.
.br
\fIpropertyName\fP The name of the property\&.
.br
\fIdefaultValue\fP Value to be returned if the user is not authorized to read the property\&.
.br
\fInoAccess\fP True if an exception should be thrown when the user is not authorized to read this property\&.
.RE
.PP

.PP
Definition at line 842 of file ReadOnlyBase\&.cs\&.
.SS "P \fBCsla\&.ReadOnlyBase\fP< T >\&.GetPropertyConvert< F, P > (\fBPropertyInfo\fP< F > propertyInfo)\fC [protected]\fP"

.PP
Gets a property's value from the list of managed field values, first checking authorization, and converting the value to an appropriate type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIF\fP Type of the field\&. 
.br
\fIP\fP Type of the property\&. 
.RE
.PP
\fBParameters\fP
.RS 4
\fIpropertyInfo\fP \fBPropertyInfo\fP object containing property metadata\&.
.RE
.PP
.PP
If the user is not authorized to read the property value, the defaultValue value is returned as a result\&. 
.PP
Definition at line 1043 of file ReadOnlyBase\&.cs\&.
.SS "P \fBCsla\&.ReadOnlyBase\fP< T >\&.GetPropertyConvert< F, P > (\fBPropertyInfo\fP< F > propertyInfo, F field)\fC [protected]\fP"

.PP
Gets a property's value as a specified type, first checking authorization\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIF\fP Type of the field\&. 
.br
\fIP\fP Type of the property\&. 
.RE
.PP
\fBParameters\fP
.RS 4
\fIfield\fP The backing field for the property\&.
.br
\fIpropertyInfo\fP \fBPropertyInfo\fP object containing property metadata\&.
.RE
.PP
.PP
If the user is not authorized to read the property value, the defaultValue value is returned as a result\&. 
.PP
Definition at line 974 of file ReadOnlyBase\&.cs\&.
.SS "P \fBCsla\&.ReadOnlyBase\fP< T >\&.GetPropertyConvert< F, P > (\fBPropertyInfo\fP< F > propertyInfo, F field, \fBSecurity\&.NoAccessBehavior\fP noAccess)\fC [protected]\fP"

.PP
Gets a property's value as a specified type, first checking authorization\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIF\fP Type of the field\&. 
.br
\fIP\fP Type of the property\&. 
.RE
.PP
\fBParameters\fP
.RS 4
\fIfield\fP The backing field for the property\&.
.br
\fIpropertyInfo\fP \fBPropertyInfo\fP object containing property metadata\&.
.br
\fInoAccess\fP True if an exception should be thrown when the user is not authorized to read this property\&.
.RE
.PP
.PP
If the user is not authorized to read the property value, the defaultValue value is returned as a result\&. 
.PP
Definition at line 1001 of file ReadOnlyBase\&.cs\&.
.SS "P \fBCsla\&.ReadOnlyBase\fP< T >\&.GetPropertyConvert< F, P > (\fBPropertyInfo\fP< F > propertyInfo, \fBSecurity\&.NoAccessBehavior\fP noAccess)\fC [protected]\fP"

.PP
Gets a property's value from the list of managed field values, first checking authorization, and converting the value to an appropriate type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIF\fP Type of the field\&. 
.br
\fIP\fP Type of the property\&. 
.RE
.PP
\fBParameters\fP
.RS 4
\fIpropertyInfo\fP \fBPropertyInfo\fP object containing property metadata\&.
.br
\fInoAccess\fP True if an exception should be thrown when the user is not authorized to read this property\&.
.RE
.PP
.PP
If the user is not authorized to read the property value, the defaultValue value is returned as a result\&. 
.PP
Definition at line 1069 of file ReadOnlyBase\&.cs\&.
.SS "virtual void \fBCsla\&.ReadOnlyBase\fP< T >\&.Initialize ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Override this method to set up event handlers so user code in a partial class can respond to events raised by generated code\&. 
.PP
Definition at line 100 of file ReadOnlyBase\&.cs\&.
.SS "P \fBCsla\&.ReadOnlyBase\fP< T >\&.LazyGetProperty< P > (\fBPropertyInfo\fP< P > property, Func< P > valueGenerator)\fC [protected]\fP"

.PP
Lazily initializes a property and returns the resulting value\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of the property\&.
.RE
.PP
\fBParameters\fP
.RS 4
\fIproperty\fP \fBPropertyInfo\fP object containing property metadata\&.
.br
\fIvalueGenerator\fP Method returning the new value\&.
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP
.PP
If the user is not authorized to read the property value, the defaultValue value is returned as a result\&. 
.PP
Definition at line 913 of file ReadOnlyBase\&.cs\&.
.SS "P \fBCsla\&.ReadOnlyBase\fP< T >\&.LazyGetPropertyAsync< P > (\fBPropertyInfo\fP< P > property, Task< P > factory)\fC [protected]\fP"

.PP
Lazily initializes a property and returns the resulting value\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of the property\&.
.RE
.PP
\fBParameters\fP
.RS 4
\fIproperty\fP \fBPropertyInfo\fP object containing property metadata\&.
.br
\fIfactory\fP Async method returning the new value\&.
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP
.PP
Note that the first value returned is almost certainly the defaultValue because the value is initialized asynchronously\&. The real value is provided later along with a PropertyChanged event to indicate the value has changed\&. 
.PP
If the user is not authorized to read the property value, the defaultValue value is returned as a result\&. 
.PP
Definition at line 945 of file ReadOnlyBase\&.cs\&.
.SS "P \fBCsla\&.ReadOnlyBase\fP< T >\&.LazyReadProperty< P > (\fBPropertyInfo\fP< P > property, Func< P > valueGenerator)\fC [protected]\fP"

.PP
Gets a property's value as a specified type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of the property\&. 
.RE
.PP
\fBParameters\fP
.RS 4
\fIproperty\fP \fBPropertyInfo\fP object containing property metadata\&.
.br
\fIvalueGenerator\fP Method returning the new value\&.
.RE
.PP

.PP
Definition at line 1211 of file ReadOnlyBase\&.cs\&.
.SS "P \fBCsla\&.ReadOnlyBase\fP< T >\&.LazyReadPropertyAsync< P > (\fBPropertyInfo\fP< P > property, Task< P > factory)\fC [protected]\fP"

.PP
Gets a property's value as a specified type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of the property\&. 
.RE
.PP
\fBParameters\fP
.RS 4
\fIproperty\fP \fBPropertyInfo\fP object containing property metadata\&.
.br
\fIfactory\fP Async method returning the new value\&.
.RE
.PP

.PP
Definition at line 1230 of file ReadOnlyBase\&.cs\&.
.SS "virtual void \fBCsla\&.ReadOnlyBase\fP< T >\&.LoadProperty (\fBIPropertyInfo\fP propertyInfo, object newValue)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Loads a property's managed field with the supplied value calling PropertyHasChanged if the value does change\&. 
.PP
\fBParameters\fP
.RS 4
\fIpropertyInfo\fP \fBPropertyInfo\fP object containing property metadata\&.
.br
\fInewValue\fP The new value for the property\&.
.RE
.PP
.PP
No authorization checks occur when this method is called, and no PropertyChanging or PropertyChanged events are raised\&. Loading values does not cause validation rules to be invoked\&. 
.PP
Definition at line 1376 of file ReadOnlyBase\&.cs\&.
.SS "void \fBCsla\&.ReadOnlyBase\fP< T >\&.\fBLoadProperty\fP< P > (\fBPropertyInfo\fP< P > propertyInfo, P newValue)\fC [protected]\fP"

.PP
Loads a property's managed field with the supplied value calling PropertyHasChanged if the value does change\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of the property\&. 
.RE
.PP
\fBParameters\fP
.RS 4
\fIpropertyInfo\fP \fBPropertyInfo\fP object containing property metadata\&.
.br
\fInewValue\fP The new value for the property\&.
.RE
.PP
.PP
No authorization checks occur when this method is called, and no PropertyChanging or PropertyChanged events are raised\&. Loading values does not cause validation rules to be invoked\&. 
.PP
Definition at line 1329 of file ReadOnlyBase\&.cs\&.
.SS "void \fBCsla\&.ReadOnlyBase\fP< T >\&.LoadPropertyAsync< R > (\fBPropertyInfo\fP< R > property, Task< R > factory)\fC [protected]\fP"

.PP
Load a property from an async method\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIR\fP 
.RE
.PP
\fBParameters\fP
.RS 4
\fIproperty\fP 
.br
\fIfactory\fP 
.RE
.PP

.PP
Definition at line 1445 of file ReadOnlyBase\&.cs\&.
.SS "void \fBCsla\&.ReadOnlyBase\fP< T >\&.LoadPropertyConvert< P, F > (\fBPropertyInfo\fP< P > propertyInfo, F newValue)\fC [protected]\fP"

.PP
Loads a property's managed field with the supplied value calling PropertyHasChanged if the value does change\&. 
.PP
\fBParameters\fP
.RS 4
\fIpropertyInfo\fP \fBPropertyInfo\fP object containing property metadata\&.
.br
\fInewValue\fP The new value for the property\&.
.RE
.PP
.PP
No authorization checks occur when this method is called, and no PropertyChanging or PropertyChanged events are raised\&. Loading values does not cause validation rules to be invoked\&. 
.PP
Definition at line 1269 of file ReadOnlyBase\&.cs\&.
.SS "void \fBCsla\&.ReadOnlyBase\fP< T >\&.MarkBusy ()\fC [protected]\fP"

.PP
Marks the object as being busy (it is running an async operation)\&. 
.PP
Definition at line 1485 of file ReadOnlyBase\&.cs\&.
.SS "void \fBCsla\&.ReadOnlyBase\fP< T >\&.MarkIdle ()\fC [protected]\fP"

.PP
Marks the object as being not busy (it is not running an async operation)\&. 
.PP
Definition at line 1499 of file ReadOnlyBase\&.cs\&.
.SS "virtual void \fBCsla\&.ReadOnlyBase\fP< T >\&.OnBusyChanged (\fBBusyChangedEventArgs\fP args)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Raises the BusyChanged event\&. 
.PP
\fBParameters\fP
.RS 4
\fIargs\fP Event arguments\&.
.RE
.PP

.PP
Definition at line 1567 of file ReadOnlyBase\&.cs\&.
.SS "void \fBCsla\&.ReadOnlyBase\fP< T >\&.OnBusyChanged (string propertyName, bool busy)\fC [protected]\fP"

.PP
Raises the BusyChanged event\&. 
.PP
\fBParameters\fP
.RS 4
\fIpropertyName\fP Name of the property that has changed\&.
.br
\fIbusy\fP New busy value\&.
.RE
.PP

.PP
Definition at line 1557 of file ReadOnlyBase\&.cs\&.
.SS "virtual void \fBCsla\&.ReadOnlyBase\fP< T >\&.OnDeserialized (System\&.Runtime\&.Serialization\&.StreamingContext context)\fC [protected]\fP, \fC [virtual]\fP"

.PP
This method is called on a newly deserialized object after deserialization is complete\&. 
.PP
\fBParameters\fP
.RS 4
\fIcontext\fP \fBSerialization\fP context object\&.
.RE
.PP

.PP
Definition at line 513 of file ReadOnlyBase\&.cs\&.
.SS "override void \fBCsla\&.ReadOnlyBase\fP< T >\&.OnGetChildren (\fBCsla\&.Serialization\&.Mobile\&.SerializationInfo\fP info, \fBCsla\&.Serialization\&.Mobile\&.MobileFormatter\fP formatter)\fC [protected]\fP"

.PP
Override this method to insert your child object references into the MobileFormatter serialzation stream\&. 
.PP
\fBParameters\fP
.RS 4
\fIinfo\fP Object containing the data to serialize\&. 
.br
\fIformatter\fP Reference to MobileFormatter instance\&. Use this to convert child references to/from reference id values\&. 
.RE
.PP

.PP
Definition at line 1693 of file ReadOnlyBase\&.cs\&.
.SS "override void \fBCsla\&.ReadOnlyBase\fP< T >\&.OnSetChildren (\fBCsla\&.Serialization\&.Mobile\&.SerializationInfo\fP info, \fBCsla\&.Serialization\&.Mobile\&.MobileFormatter\fP formatter)\fC [protected]\fP"

.PP
Override this method to retrieve your child object references from the MobileFormatter serialzation stream\&. 
.PP
\fBParameters\fP
.RS 4
\fIinfo\fP Object containing the data to serialize\&. 
.br
\fIformatter\fP Reference to MobileFormatter instance\&. Use this to convert child references to/from reference id values\&. 
.RE
.PP

.PP
Definition at line 1715 of file ReadOnlyBase\&.cs\&.
.SS "virtual void \fBCsla\&.ReadOnlyBase\fP< T >\&.OnUnhandledAsyncException (\fBErrorEventArgs\fP error)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Raises the UnhandledAsyncException event\&. 
.PP
\fBParameters\fP
.RS 4
\fIerror\fP Error arguments\&.
.RE
.PP

.PP
Definition at line 1748 of file ReadOnlyBase\&.cs\&.
.SS "void \fBCsla\&.ReadOnlyBase\fP< T >\&.OnUnhandledAsyncException (object originalSender, Exception error)\fC [protected]\fP"

.PP
Raises the UnhandledAsyncException event\&. 
.PP
\fBParameters\fP
.RS 4
\fIoriginalSender\fP Original sender of the event\&.
.br
\fIerror\fP Execption that occurred\&.
.RE
.PP

.PP
Definition at line 1761 of file ReadOnlyBase\&.cs\&.
.SS "virtual object \fBCsla\&.ReadOnlyBase\fP< T >\&.ReadProperty (\fBIPropertyInfo\fP propertyInfo)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Gets a property's value as a specified type\&. 
.PP
\fBParameters\fP
.RS 4
\fIpropertyInfo\fP \fBPropertyInfo\fP object containing property metadata\&.
.RE
.PP

.PP
Definition at line 1181 of file ReadOnlyBase\&.cs\&.
.SS "P \fBCsla\&.ReadOnlyBase\fP< T >\&.\fBReadProperty\fP< P > (\fBPropertyInfo\fP< P > propertyInfo)\fC [protected]\fP"

.PP
Gets a property's value as a specified type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of the property\&. 
.RE
.PP
\fBParameters\fP
.RS 4
\fIpropertyInfo\fP \fBPropertyInfo\fP object containing property metadata\&.
.RE
.PP

.PP
Definition at line 1156 of file ReadOnlyBase\&.cs\&.
.SS "P \fBCsla\&.ReadOnlyBase\fP< T >\&.ReadPropertyConvert< F, P > (\fBPropertyInfo\fP< F > propertyInfo)\fC [protected]\fP"

.PP
Gets a property's value from the list of managed field values, converting the value to an appropriate type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIF\fP Type of the field\&. 
.br
\fIP\fP Type of the property\&. 
.RE
.PP
\fBParameters\fP
.RS 4
\fIpropertyInfo\fP \fBPropertyInfo\fP object containing property metadata\&.
.RE
.PP

.PP
Definition at line 1143 of file ReadOnlyBase\&.cs\&.
.SS "static \fBMethodInfo\fP \fBCsla\&.ReadOnlyBase\fP< T >\&.RegisterMethod (Expression< Action< T >> methodLambdaExpression)\fC [static]\fP, \fC [protected]\fP"

.PP
Registers the method\&. 
.PP
\fBParameters\fP
.RS 4
\fImethodLambdaExpression\fP The method lambda expression\&.
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line 793 of file ReadOnlyBase\&.cs\&.
.SS "static \fBMethodInfo\fP \fBCsla\&.ReadOnlyBase\fP< T >\&.RegisterMethod (string methodName)\fC [static]\fP, \fC [protected]\fP"

.PP
Registers a method for use in Authorization\&. 
.PP
\fBParameters\fP
.RS 4
\fImethodName\fP Method name from nameof()
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line 783 of file ReadOnlyBase\&.cs\&.
.SS "static \fBCsla\&.Core\&.IMemberInfo\fP \fBCsla\&.ReadOnlyBase\fP< T >\&.RegisterMethod (Type objectType, \fBIMemberInfo\fP info)\fC [static]\fP, \fC [protected]\fP"

.PP
Indicates that the specified method belongs to the type\&. 
.PP
\fBParameters\fP
.RS 4
\fIobjectType\fP Type of object to which the method belongs\&. 
.br
\fIinfo\fP IMemberInfo object for the property\&. 
.RE
.PP
\fBReturns\fP
.RS 4
The provided IMemberInfo object\&. 
.RE
.PP

.PP
Definition at line 750 of file ReadOnlyBase\&.cs\&.
.SS "static \fBMethodInfo\fP \fBCsla\&.ReadOnlyBase\fP< T >\&.RegisterMethod (Type objectType, string methodName)\fC [static]\fP, \fC [protected]\fP"

.PP
Indicates that the specified method belongs to the type\&. 
.PP
\fBParameters\fP
.RS 4
\fIobjectType\fP Type of object to which the method belongs\&. 
.br
\fImethodName\fP Name of the method\&. 
.RE
.PP
\fBReturns\fP
.RS 4
The provided IMemberInfo object\&. 
.RE
.PP

.PP
Definition at line 771 of file ReadOnlyBase\&.cs\&.
.SS "static \fBPropertyInfo\fP<P> \fBCsla\&.ReadOnlyBase\fP< T >\&.RegisterProperty< P > (Expression< Func< T, object >> propertyLambdaExpression)\fC [static]\fP, \fC [protected]\fP"

.PP
Indicates that the specified property belongs to the business object type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of property
.RE
.PP
\fBParameters\fP
.RS 4
\fIpropertyLambdaExpression\fP Property Expression
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line 581 of file ReadOnlyBase\&.cs\&.
.SS "static \fBPropertyInfo\fP<P> \fBCsla\&.ReadOnlyBase\fP< T >\&.RegisterProperty< P > (Expression< Func< T, object >> propertyLambdaExpression, P defaultValue)\fC [static]\fP, \fC [protected]\fP"

.PP
Indicates that the specified property belongs to the business object type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of property
.RE
.PP
\fBParameters\fP
.RS 4
\fIpropertyLambdaExpression\fP Property Expression
.br
\fIdefaultValue\fP Default Value for the property
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line 596 of file ReadOnlyBase\&.cs\&.
.SS "static \fBPropertyInfo\fP<P> \fBCsla\&.ReadOnlyBase\fP< T >\&.RegisterProperty< P > (Expression< Func< T, object >> propertyLambdaExpression, \fBRelationshipTypes\fP relationship)\fC [static]\fP, \fC [protected]\fP"

.PP
Indicates that the specified property belongs to the business object type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of property
.RE
.PP
\fBParameters\fP
.RS 4
\fIpropertyLambdaExpression\fP Property Expression
.br
\fIrelationship\fP Relationship with property value\&.
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line 680 of file ReadOnlyBase\&.cs\&.
.SS "static \fBPropertyInfo\fP<P> \fBCsla\&.ReadOnlyBase\fP< T >\&.RegisterProperty< P > (Expression< Func< T, object >> propertyLambdaExpression, string friendlyName)\fC [static]\fP, \fC [protected]\fP"

.PP
Indicates that the specified property belongs to the business object type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of property
.RE
.PP
\fBParameters\fP
.RS 4
\fIpropertyLambdaExpression\fP Property Expression
.br
\fIfriendlyName\fP Friendly description for a property to be used in databinding
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line 624 of file ReadOnlyBase\&.cs\&.
.SS "static \fBPropertyInfo\fP<P> \fBCsla\&.ReadOnlyBase\fP< T >\&.RegisterProperty< P > (Expression< Func< T, object >> propertyLambdaExpression, string friendlyName, P defaultValue)\fC [static]\fP, \fC [protected]\fP"

.PP
Indicates that the specified property belongs to the business object type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of property
.RE
.PP
\fBParameters\fP
.RS 4
\fIpropertyLambdaExpression\fP Property Expression
.br
\fIfriendlyName\fP Friendly description for a property to be used in databinding
.br
\fIdefaultValue\fP Default Value for the property
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line 653 of file ReadOnlyBase\&.cs\&.
.SS "static \fBPropertyInfo\fP<P> \fBCsla\&.ReadOnlyBase\fP< T >\&.RegisterProperty< P > (Expression< Func< T, object >> propertyLambdaExpression, string friendlyName, P defaultValue, \fBRelationshipTypes\fP relationship)\fC [static]\fP, \fC [protected]\fP"

.PP
Indicates that the specified property belongs to the business object type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of property
.RE
.PP
\fBParameters\fP
.RS 4
\fIpropertyLambdaExpression\fP Property Expression
.br
\fIfriendlyName\fP Friendly description for a property to be used in databinding
.br
\fIdefaultValue\fP Default Value for the property
.br
\fIrelationship\fP Relationship with property value\&.
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line 728 of file ReadOnlyBase\&.cs\&.
.SS "static \fBPropertyInfo\fP<P> \fBCsla\&.ReadOnlyBase\fP< T >\&.RegisterProperty< P > (Expression< Func< T, object >> propertyLambdaExpression, string friendlyName, \fBRelationshipTypes\fP relationship)\fC [static]\fP, \fC [protected]\fP"

.PP
Indicates that the specified property belongs to the business object type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of property
.RE
.PP
\fBParameters\fP
.RS 4
\fIpropertyLambdaExpression\fP Property Expression
.br
\fIfriendlyName\fP Friendly description for a property to be used in databinding
.br
\fIrelationship\fP Relationship with property value\&.
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line 696 of file ReadOnlyBase\&.cs\&.
.SS "static \fBPropertyInfo\fP<P> \fBCsla\&.ReadOnlyBase\fP< T >\&.RegisterProperty< P > (\fBPropertyInfo\fP< P > info)\fC [static]\fP, \fC [protected]\fP"

.PP
Indicates that the specified property belongs to the business object type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of property\&. 
.RE
.PP
\fBParameters\fP
.RS 4
\fIinfo\fP \fBPropertyInfo\fP object for the property\&. 
.RE
.PP
\fBReturns\fP
.RS 4
The provided IPropertyInfo object\&. 
.RE
.PP

.PP
Definition at line 557 of file ReadOnlyBase\&.cs\&.
.SS "static \fBPropertyInfo\fP<P> \fBCsla\&.ReadOnlyBase\fP< T >\&.RegisterProperty< P > (string propertyName)\fC [static]\fP, \fC [protected]\fP"

.PP
Indicates that the specified property belongs to the business object type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of property
.RE
.PP
\fBParameters\fP
.RS 4
\fIpropertyName\fP Property name from nameof()
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line 569 of file ReadOnlyBase\&.cs\&.
.SS "static \fBPropertyInfo\fP<P> \fBCsla\&.ReadOnlyBase\fP< T >\&.RegisterProperty< P > (string propertyName, \fBRelationshipTypes\fP relationship)\fC [static]\fP, \fC [protected]\fP"

.PP
Indicates that the specified property belongs to the business object type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of property
.RE
.PP
\fBParameters\fP
.RS 4
\fIpropertyName\fP Property name from nameof()
.br
\fIrelationship\fP Relationship with property value\&.
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line 667 of file ReadOnlyBase\&.cs\&.
.SS "static \fBPropertyInfo\fP<P> \fBCsla\&.ReadOnlyBase\fP< T >\&.RegisterProperty< P > (string propertyName, string friendlyName)\fC [static]\fP, \fC [protected]\fP"

.PP
Indicates that the specified property belongs to the business object type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of property
.RE
.PP
\fBParameters\fP
.RS 4
\fIpropertyName\fP Property name from nameof()
.br
\fIfriendlyName\fP Friendly description for a property to be used in databinding
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line 611 of file ReadOnlyBase\&.cs\&.
.SS "static \fBPropertyInfo\fP<P> \fBCsla\&.ReadOnlyBase\fP< T >\&.RegisterProperty< P > (string propertyName, string friendlyName, P defaultValue)\fC [static]\fP, \fC [protected]\fP"

.PP
Indicates that the specified property belongs to the business object type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of property
.RE
.PP
\fBParameters\fP
.RS 4
\fIpropertyName\fP Property name from nameof()
.br
\fIfriendlyName\fP Friendly description for a property to be used in databinding
.br
\fIdefaultValue\fP Default Value for the property
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line 639 of file ReadOnlyBase\&.cs\&.
.SS "static \fBPropertyInfo\fP<P> \fBCsla\&.ReadOnlyBase\fP< T >\&.RegisterProperty< P > (string propertyName, string friendlyName, P defaultValue, \fBRelationshipTypes\fP relationship)\fC [static]\fP, \fC [protected]\fP"

.PP
Indicates that the specified property belongs to the business object type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of property
.RE
.PP
\fBParameters\fP
.RS 4
\fIpropertyName\fP Property name from nameof()
.br
\fIfriendlyName\fP Friendly description for a property to be used in databinding
.br
\fIdefaultValue\fP Default Value for the property
.br
\fIrelationship\fP Relationship with property value\&.
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.PP
Definition at line 713 of file ReadOnlyBase\&.cs\&.
.SS "static \fBPropertyInfo\fP<P> \fBCsla\&.ReadOnlyBase\fP< T >\&.RegisterProperty< P > (Type objectType, \fBPropertyInfo\fP< P > info)\fC [static]\fP, \fC [protected]\fP"

.PP
Indicates that the specified property belongs to the type\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIP\fP Type of property\&. 
.RE
.PP
\fBParameters\fP
.RS 4
\fIobjectType\fP Type of object to which the property belongs\&. 
.br
\fIinfo\fP \fBPropertyInfo\fP object for the property\&. 
.RE
.PP
\fBReturns\fP
.RS 4
The provided IPropertyInfo object\&. 
.RE
.PP

.PP
Definition at line 539 of file ReadOnlyBase\&.cs\&.
.SS "override string \fBCsla\&.ReadOnlyBase\fP< T >\&.ToString ()"

.PP
Returns a text representation of this object by returning the \fBGetIdValue\fP value in text form\&. 
.PP
Definition at line 73 of file ReadOnlyBase\&.cs\&.
.SH "Property Documentation"
.PP 
.SS "\fBBusinessRules\fP \fBCsla\&.ReadOnlyBase\fP< T >\&.\fBBusinessRules\fP\fC [get]\fP, \fC [protected]\fP"

.PP
Provides access to the broken rules functionality\&. This property is used within your business logic so you can easily call the AddRule() method to associate business rules with your object's properties\&. 
.PP
Definition at line 156 of file ReadOnlyBase\&.cs\&.
.SS "BusyChangedEventHandler \fBCsla\&.ReadOnlyBase\fP< T >\&.BusyChanged\fC [add]\fP, \fC [remove]\fP"

.PP
Event raised when the IsBusy property value has changed\&. 
.PP
Definition at line 1544 of file ReadOnlyBase\&.cs\&.
.SS "\fBFieldDataManager\fP \fBCsla\&.ReadOnlyBase\fP< T >\&.FieldManager\fC [get]\fP, \fC [protected]\fP"

.PP
Gets the PropertyManager object for this business object\&. 
.PP
Definition at line 1460 of file ReadOnlyBase\&.cs\&.
.SS "virtual bool \fBCsla\&.ReadOnlyBase\fP< T >\&.IsBusy\fC [get]\fP"

.PP
Gets a value indicating whether this object or any of its child objects are running an async operation\&. 
.PP
Definition at line 1513 of file ReadOnlyBase\&.cs\&.
.SS "virtual bool \fBCsla\&.ReadOnlyBase\fP< T >\&.IsSelfBusy\fC [get]\fP"

.PP
Gets a value indicating whether this object is running an async operation\&. 
.PP
Definition at line 1526 of file ReadOnlyBase\&.cs\&.
.SS "EventHandler<\fBErrorEventArgs\fP> \fBCsla\&.ReadOnlyBase\fP< T >\&.UnhandledAsyncException\fC [add]\fP, \fC [remove]\fP"

.PP
Event raised when an exception occurs on a background thread during an asynchronous operation\&. 
.PP
Definition at line 1737 of file ReadOnlyBase\&.cs\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for CSLA\&.NET from the source code\&.
