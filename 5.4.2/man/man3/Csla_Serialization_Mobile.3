.TH "Csla.Serialization.Mobile" 3 "Wed Jul 21 2021" "Version 5.4.2" "CSLA.NET" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Csla.Serialization.Mobile
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBAssemblyNameTranslator\fP"
.br
.RI "Translates assembly names to and from short code values for serialization in \fBMobileFormatter\fP "
.ti -1c
.RI "class \fBCslaBinaryReader\fP"
.br
.RI "This is a class that is responsible for deserializing \fBSerializationInfo\fP objects for receiving the data from client / server\&. "
.ti -1c
.RI "class \fBCslaBinaryWriter\fP"
.br
.RI "This is a class that is responsible for serializing \fBSerializationInfo\fP objects into a Stream for sending the data t client / server "
.ti -1c
.RI "class \fBCslaLegacyBinaryReader\fP"
.br
.RI "This is a legacy version of \fBCslaBinaryReader\fP\&. You should not use this type unless you have issues with the \fBCslaBinaryReader\fP\&. "
.ti -1c
.RI "class \fBCslaLegacyBinaryWriter\fP"
.br
.RI "This is a legacy version of \fBCslaBinaryWriter\fP\&. You should not use this type unless you have issues with the \fBCslaBinaryWriter\fP\&. "
.ti -1c
.RI "class \fBCslaNonClosingBinaryWriter\fP"
.br
.RI "This class is used to get around the issue in \&.NET framework, where underlying stream is closed by a writer that writes to that stream when said writer is disposed "
.ti -1c
.RI "class \fBCslaReaderWriterFactory\fP"
.br
.RI "Factory class that is used to create Reader/Writer pair of classes to read/write the data during serialization / deserialization process "
.ti -1c
.RI "class \fBCslaXmlBinaryReader\fP"
.br
.RI "This class uses DataContractSerializer and XmlDictionaryReader classes to read the data from a stream "
.ti -1c
.RI "class \fBCslaXmlBinaryWriter\fP"
.br
.RI "This class uses DataContractSerializer and XmlDictionaryWriter classes to write the data to a stream "
.ti -1c
.RI "class \fBCslaXmlReader\fP"
.br
.RI "This class uses DataContractSerializer and XmlReader classes to read the data from a stream "
.ti -1c
.RI "class \fBCslaXmlWriter\fP"
.br
.RI "This class uses DataContractSerializer and XmlWriter classes to write the data to a stream "
.ti -1c
.RI "struct \fBDictionaryCheckResult\fP"
.br
.RI "This struct contains the result of check for existing dictionary key/value pair when creating internal dictionary of strings in order to minimize the amount of data that \fBCslaBinaryWriter\fP sends over the wire "
.ti -1c
.RI "interface \fBICslaReader\fP"
.br
.RI "Represents a reader class that can be used to read the data sent across the wire in byte array format when communicating between server and client in both directions "
.ti -1c
.RI "interface \fBICslaWriter\fP"
.br
.RI "Represents a class that can be used to write a list of \fBSerializationInfo\fP objects into a stream, typically MemoryStream "
.ti -1c
.RI "interface \fBIMobileList\fP"
.br
.RI "Extension of \fBIMobileObject\fP for list types "
.ti -1c
.RI "interface \fBIMobileObject\fP"
.br
.RI "Interface to be implemented by any object that supports serialization by the SerializationFormatterFactory\&.GetFormatter()\&. "
.ti -1c
.RI "interface \fBISerializationNotification\fP"
.br
.RI "Interface defining callback methods used by the SerializationFormatterFactory\&.GetFormatter()\&. "
.ti -1c
.RI "class \fBMobileFormatter\fP"
.br
.RI "Serializes and deserializes objects at the field level\&. "
.ti -1c
.RI "class \fBNullPlaceholder\fP"
.br
.RI "Placeholder for null child objects\&. "
.ti -1c
.RI "class \fBReferenceComparer\fP"
.br
.RI "Implements an equality comparer for \fBIMobileObject\fP that compares the objects only on the basis is the reference value\&. "
.ti -1c
.RI "class \fBSerializationInfo\fP"
.br
.RI "Object containing the serialization data for a specific object\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum class \fBCslaKnownTypes\fP : byte { \fBBoolean\fP = 1, \fBChar\fP = 2, \fBSByte\fP = 3, \fBByte\fP = 4, \fBInt16\fP = 5, \fBUInt16\fP = 6, \fBInt32\fP = 7, \fBUInt32\fP = 8, \fBInt64\fP = 9, \fBUInt64\fP = 10, \fBSingle\fP = 11, \fBDouble\fP = 12, \fBDecimal\fP = 13, \fBDateTime\fP = 14, \fBString\fP = 15, \fBTimeSpan\fP = 16, \fBDateTimeOffset\fP = 17, \fBGuid\fP = 18, \fBByteArray\fP = 19, \fBCharArray\fP = 20, \fBListOfInt\fP = 21, \fBNull\fP = 22, \fBStringWithDictionaryKey\fP = 23, \fBStringDictionaryKey\fP = 24, \fBByteArrayArray\fP = 25, \fBIMobileObject\fP }"
.br
.RI "This enumeration contains the list of known types that CslaBinaryReader and CslaBinaryWriterknow about "
.in -1c
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBCsla\&.Serialization\&.Mobile\&.CslaKnownTypes\fP : byte\fC [strong]\fP"

.PP
This enumeration contains the list of known types that \fBCslaBinaryReader\fP and \fBCslaBinaryWriter\fPknow about 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIBoolean \fP\fP
Boolean 
.TP
\fB\fIChar \fP\fP
Character/char 
.TP
\fB\fISByte \fP\fP
Signed byte 
.TP
\fB\fIByte \fP\fP
Byte 
.TP
\fB\fIInt16 \fP\fP
Short /Int 16 
.TP
\fB\fIUInt16 \fP\fP
Unsigned short / Int 16 
.TP
\fB\fIInt32 \fP\fP
Integer / Int32 
.TP
\fB\fIUInt32 \fP\fP
Unsigned Integer / Int32 
.TP
\fB\fIInt64 \fP\fP
Long / Int64 
.TP
\fB\fIUInt64 \fP\fP
Unsigned Long / Int64 
.TP
\fB\fISingle \fP\fP
Single / single precision floating point 
.TP
\fB\fIDouble \fP\fP
Double / double precision floating point 
.TP
\fB\fIDecimal \fP\fP
Decimal 
.TP
\fB\fIDateTime \fP\fP
Date / time 
.TP
\fB\fIString \fP\fP
String 
.TP
\fB\fITimeSpan \fP\fP
TimeSpan - time span 
.TP
\fB\fIDateTimeOffset \fP\fP
Date/time plus time zone / DateTimeOffset 
.TP
\fB\fIGuid \fP\fP
Globally unique identifier / Guid 
.TP
\fB\fIByteArray \fP\fP
Array of bytes\&. can be used to represent images data 
.TP
\fB\fICharArray \fP\fP
Array of characters, not the same as string 
.TP
\fB\fIListOfInt \fP\fP
List of integer / List(of Int) Used internally for serialization of list based objects such as \fBBusinessListBase\fP 
.TP
\fB\fINull \fP\fP
Represents null value 
.TP
\fB\fIStringWithDictionaryKey \fP\fP
Represents string that is supported by internal dictionary that is used to replace strings with integers to save space in the serialization process\&. This entry contains both string and integer value of that string\&. This data is used to re-build the dictionary on the receiving end 
.TP
\fB\fIStringDictionaryKey \fP\fP
Key that corresponds to internally used string\&. On the receiving end this value will be replaces with the actual string 
.TP
\fB\fIByteArrayArray \fP\fP
Array of array of bytes 
.TP
\fB\fIIMobileObject \fP\fP
\fBIMobileObject\fP serialized into a byte array 
.PP
Definition at line 8 of file CslaKnownTypes\&.cs\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for CSLA\&.NET from the source code\&.
